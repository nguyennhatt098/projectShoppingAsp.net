@model Model.User

@{
	ViewBag.Title = "Edit";
	var user = (Model.User)@ViewBag.user;
	Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";

}
@{
	var checkGirl = "";
	var checkBoy = "";
	var checkDefault = "";

	if (Model != null && Model.Gender == "Nam")
	{
		checkBoy = "checked";
	}
	if (Model != null && Model.Gender == "Nữ")
	{
		checkGirl = "checked";
	}
	if (Model != null && Model.Gender == "Khác")
	{
		checkDefault = "checked";
	}
}

<div class="box">
	<h2 style="text-align:center">Sửa người dùng</h2>

	<div class="box-body">

		@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "create", enctype = "multipart/form-data" }))
		{
			@Html.AntiForgeryToken()

			<div class="form-horizontal container">

				@Html.ValidationSummary(true, "", new { @class = "text-danger" })
				@Html.HiddenFor(model => model.UserId)

				<div class="form-group">
					@Html.LabelFor(model => model.RoleId, "RoleId", htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.DropDownList("RoleId", null, htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						<input class="form-control" type="password" name="Password" value="@user.Password" />
						@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
					</div>
				</div>
				<div class="form-group">
					@Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						<input class="form-control" type="password" name="ConfirmPassword" value="@user.Password" />
						@Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
					</div>
				</div>
				<div class="form-group">
					@Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Image, new { htmlAttributes = new { data_multiple = "false", @class = "form-control uploadfile" } })
						@Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
						<img class="img-main" style="width:100px;" src="@Model.Image" />
					</div>
				</div>
				<div class="form-group">
					@Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">

						<span>Giới tính:</span>
						<input style="width: 3%; height: 20px;" type="radio" name="Gender" value="Nam" @checkBoy />
						<span>Nam</span>
						<input style="width: 3%; height: 20px;" type="radio" name="Gender" value="Nữ" @checkGirl />
						<span>Nữ</span>
						<input style="width: 3%; height: 20px;" type="radio" name="Gender" value="Khác" @checkDefault />
						<span>Khác</span>
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						<div class="checkbox">
							<select name="Status">
								@if (user.Status)
								{
									<option value="true" selected="">Hoạt động</option>
									<option value="false">Khóa</option>
								}
								else
								{
									<option value="true">Hoạt động</option>
									<option value="false" selected="">Khóa</option>
								}

							</select>
							@Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>

				<div class="form-group">
					<div class="col-md-offset-2 col-md-10">
						<input id="check-click" type="submit" value="Save" class="btn btn-default" />
					</div>
				</div>
			</div>
		}

		<div>
			<a class="btn btn-primary" href="@Url.Action("Index")">Back to List</a>
		</div>
	</div>
</div>
@section Scripts {
	<script src="~/Asset/ckfinder/ckfinder.js"></script>
	<script>
		$(function () {
			$(".uploadfile").click(function () {
				var ip = $(this);
				var finder = new CKFinder();
				finder.selectActionFunction = function (url, file, files) {
					ip.val(url);
					$(".img-main").remove();
					ip.after("<img class='img-main' src='" + url + "' width='75px'/>");
				}
				finder.popup();
			});
		})
	</script>
}